shiny::runApp('Desktop/498F/Building-Applications')
shiny::runApp('Desktop/498F/Building-Applications')
shiny::runApp()
shiny::runApp('Desktop/498F/Building-Applications')
shiny::runApp()
shiny::runApp('Desktop/498F/Building-Applications')
shiny::runApp('Desktop/498F/Building-Applications')
shiny::runApp('Desktop/498F/Building-Applications')
shiny::runApp('Desktop/498F/Building-Applications')
shiny::runApp('Desktop/498F/Building-Applications')
f# One of many libraries for classification / ML
library(rpart)
# Read in data
homes <- read.csv('part_1_data.csv')
# Use rpart to fit a model: predict `in_sf` using all variables
basic_fit <- rpart(in_sf ~ ., data = homes, method="class")
Wrapping those tasks in functions
# Function to compare values
assess_fit <- function(model, data = homes, outcome = 'in_sf') {
predicted <- predict(model, data, type='class')
accuracy <- length(which(data[,outcome] == predicted)) / length(predicted) * 100
return(paste0(accuracy, '% accurate!'))
}
# Use rpart to fit a model: predict `in_sf` using all other variables
basic_fit <- rpart(in_sf ~ ., data = homes, method="class")
# How well did we do?
assess_fit(basic_fit)
# Get a perfect fit: increase complexity, allow small splits
perfect_fit <- rpart(in_sf ~ ., data = homes, method="class",
control=rpart.control(cp = 0, minsplit=2))
assess_fit(perfect_fit)
What about testing/training data?
# Testing/training data:
sample_size <- floor(.25 * nrow(homes))
train_indicies <- sample(seq_len(nrow(homes)), size = sample_size)
training_data <- data[train_indicies,]
test_data <- data[-train_indicies,]
# Train on training data, test on testing data: basic fit
basic_fit <- rpart(in_sf ~ ., data = training_data, method="class")
assess_fit(basic_fit, data=test_data)
View(assess_fit)
basic_fit <- rpart(in_sf ~ ., data = homes, method="class")
# One of many libraries for classification / ML
library(rpart)
# Read in data
homes <- read.csv('part_1_data.csv')
# Use rpart to fit a model: predict `in_sf` using all variables
basic_fit <- rpart(in_sf ~ ., data = homes, method="class")
homes <- read.csv('part_1_data.csv')
install.packages("tmap")
library("tmap")
library("leaflet")
library(tmap)
library(leaflet)
install.packages("tmap")
install.packages("leaflet")
library(tmap)
library(leaflet)
iowageo <- read_shape(file=/Users/colecansler/Desktop/498F/Final-Project/Data/tl_2013_19_place.shp)
iowageo <- read_shape(file="/Users/colecansler/Desktop/498F/Final-Project/Data/tl_2013_19_place.shp")
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE")
leaflet(noise) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
library(leaflet)
library(dplyr)
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE")
leaflet(noise) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
setwd("/Users/colecansler/Desktop")
data <- read.csv("911Calls.csv")
summary <- group_by(data, Initial.Type.Group,Initial.Type.Subgroup) %>%
summarize(num_incidents = n())
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE")
leaflet(noise) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
leaflet(noise) %>% addProviderTiles("Stamen.Toner") %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
leaflet(noise) %>% addProviderTiles("Esri.WorldGrayCanvas") %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
leaflet(noise) %>% addProviderTiles("NASAGIBS.ViirsEarthAtNight2012") %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
leaflet(noise) %>% addProviderTiles("OpenStreetMap.DE") %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
leaflet(noise) %>% addProviderTiles("Hydda.Full") %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
leaflet(noise) %>% addProviderTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
leaflet(noise) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
View(data)
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE", "CRISIS CALL")
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE",Initial.Type.Group ==  "CRISIS CALL")
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE" & "CRISIS CALL")
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE" & Initial.Type.Group == "CRISIS CALL")
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE" || Initial.Type.Group == "CRISIS CALL")
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE" | Initial.Type.Group == "CRISIS CALL")
noise <- filter(data, Initial.Type.Group == "NOISE DISTURBANCE" |  "CRISIS CALL")
incident_desc <- "CRISIS CALL"
noise <- filter(data, Initial.Type.Group == incident_desc)
leaflet(noise) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
data$Event.Clearance.Date
data[1]
data[1]$Event.Clearance.Date
data$Event.Clearance.Date[1]
class(data$Event.Clearance.Date[1])
as.character(data$Event.Clearance.Date[1])
View(data)
as.numeric(data$Event.Clearance.Date[1])
class(data$Event.Clearance.Date[1])
data$Event.Clearance.Date[1]
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015/Data")
data <- read.csv("911Calls.csv")
View(data)
?dmy
library(dplyr)
?dmy
library(plyr)
?dmy
install.packages("lubridate")
library(lubridate)
?dmy
View(data)
911data$At.Scene.Time <- dmy(df$At.Scene.Time)
911data$At.Scene.Time <- strsplit(911data$At.Scene.Time," ")[[1]][1]
911data <- read.csv("911Calls.csv")
911data <- read.csv("911Calls.csv")
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015/Data")
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015/Data")
911data <- read.csv("911Calls.csv")
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- strsplit(911data$At.Scene.Time," ")[[1]][1]
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[[1]][1]
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[[1]][1]
data$At.Scene.Time <- dmy(df$At.Scene.Time)
class(data$At.Scene.Time[1])
data$At.Scene.Time <- dmy(data$At.Scene.Time)
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[[1]][1]
data$At.Scene.Time <- dmy(data$At.Scene.Time)
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[[1]][1]
data$At.Scene.Time[1]
data[order(as.Date(data$At.Scene.Time, format="%d/%m/%Y")),]
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[[1]][1]
data$At.Scene.Time <- dmy(data$At.Scene.Time)
data <- data[order(as.Date(data$At.Scene.Time, format="%d/%m/%Y")),]
View(data)
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[[1]][1]
data <- data[order(as.Date(data$At.Scene.Time, format="%d/%m/%Y")),]
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[[1]][1]
View(data)
data <- read.csv("911Calls.csv")
View(data)
data$At.Scene.Time <- as.character(data$At.Scene.Time)
View(data)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[[1]][1]
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[1]
data <- read.csv("911Calls.csv")
View(data)
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[1]
data$At.Scene.Time <- strsplit(data$At.Scene.Time," ")[1][1]
?lapply
data <- read.csv("911Calls.csv")
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data[order(as.Date(data$At.Scene.Time,format="%d/%m/%Y")),,drop=FALSE]
data <- read.csv("911Calls.csv")
sort_by_date <- function(data){
data$At.Scene.Time <- as.character(data$At.Scene.Time)
data <- data[order(as.Date(data$At.Scene.Time,format="%d/%m/%Y")),,drop=FALSE]
}
View(data)
data <- read.csv("911Calls.csv")
View(data)
data <- data[order(as.Date(data$At.Scene.Time, "%m/%d/%Y"), decreasing = TRUE),]
data <- data[order(as.Date(data$At.Scene.Time, "%m/%d/%Y"), decreasing = TRUE)]
data <- data[order(as.Date(data$At.Scene.Time, "%m/%d/%Y"), decreasing = TRUE),]
data <- read.csv("911Calls.csv")
data <- data[order(as.Date(data$At.Scene.Time, "%m/%d/%Y"), decreasing = TRUE),]
View(data)
data <- data[order(as.Date(data$At.Scene.Time, "%m/%d/%Y"), decreasing = FALSE),]
sort_by_date <- function(data,arrange_type){
if(arrange_type == "descending"){
boolean <- TRUE
}
else{
boolean <- FALSE
}
data <- data[order(as.Date(data$At.Scene.Time, "%m/%d/%Y"), decreasing = boolean),]
return (data)
}
data <- read.csv("911Calls.csv")
View(data)
data <- sort_by_date(data,"descending")
View(data)
sort_by_date <- function(data){
data <- data[order(as.Date(data$At.Scene.Time, "%m/%d/%Y"), decreasing = FALSE),]
return (data)
}
data <- sort_by_date(data)
View(data)
View(data)
data{1:10}
data[1:10]
?head
data <- head(data,10)
View(data)
data <- read.csv("911Calls.csv")
View(data)
data <- data[order(as.Date(data$At.Scene.Time, "%m/%d/%Y"), decreasing = FALSE),]
View(data)
iris
iris[1:10]
iris[1:10,]
iris <- arrange(iris,Sepal.Width)
iris
iris[1:10,]
iris[10,]
monthly_row_nums <- function(month){
row_num <- -1
if(month == "January"){
row_num <- 5749
}
else if(month == "February"){
row_num <- 11012
}
else if(month == "March")
row_num <- 17250
}
else if(month == "April"){
row_num <- 23547
}
else if(month == "May"){
row_num <- 31866
}
else if(month == "June"){
row_num <- 39470
}
else if(month == "July"){
row_num <- 49783
}
else if(month == "August"){
row_num <- 58585
}
else if(month == "September"){
row_num <- 66623
}
else if(month == "October"){
row_num <- 74633
}
else if(month == "November"){
row_num <- 83418
}
else if(month == "December"){
row_num <- 91067
}
return (row_num)
}
monthly_row_nums <- function(month){
row_num <- -1
if(month == "January"){
row_num <- 5749
}
}
monthly_row_nums <- function(month){
row_num <- -1
if(month == "January"){
row_num <- 5749
}
else if(month == "February"){
row_num <- 11012
}
}
monthly_row_nums <- function(month){
row_num <- -1
if(month == "January"){
row_num <- 5749
}
else if(month == "February"){
row_num <- 11012
}
else if(month == "March"){
row_num <- 17250
}
else if(month == "April"){
row_num <- 23547
}
else if(month == "May"){
row_num <- 31866
}
else if(month == "June"){
row_num <- 39470
}
else if(month == "July"){
row_num <- 49783
}
else if(month == "August"){
row_num <- 58585
}
else if(month == "September"){
row_num <- 66623
}
else if(month == "October"){
row_num <- 74633
}
else if(month == "November"){
row_num <- 83418
}
else if(month == "December"){
row_num <- 91067
}
return (row_num)
}
monthly_row_nums("March")
data[1:17250,]
data <- data[1:monthly_row_nums("March"),]
View(data)
View(data)
if(incident_desc != NULL){}
data <- filter(data, Initial.Type.Group == incident_desc)
}
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
if(incident_desc != NULL){
data <- filter(data, Initial.Type.Group == incident_desc)
}
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
data <- filter(data, Initial.Type.Group == incident_desc)
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
incident_desc <- "ROBBERY"
data <- filter(data, Initial.Type.Group == incident_desc)
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
data <- read.csv("911Calls.csv")
start <- 1
end <- 3
data <- dat[monthly_row_nums(start):monthly_row_nums(end),]
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
View(data)
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015")
source('DataWranglingScript.r')
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015")
source('DataWranglingScript.r')
source('DataWranglingScript.r')
View(data)
start <- 4
end <- 6
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
source('DataWranglingScript.r')
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015")
source('DataWranglingScript.r')
start <- 2
end <- 4
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Event.Clearance.Group)
)
View(data)
incident_description_map <- function(data, start, end){
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Initial.Type.Description)
)
}
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Initial.Type.Description)
)
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
slider_range <- "1 100"
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Initial.Type.Description)
)
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015")
source('DataWranglingScript.r')
build_map <- function(slider_range){
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Initial.Type.Description)
)
}
build_map("hello")
month <- 3
if(month == 1){
row_num <- 1
}
else if(month == 2){
row_num <- 5749
}
else if(month == 3){
row_num <- 11012
}
else if(month == 4){
row_num <- 17250
if(month = 1){
if(month == 1){
row_num <- 1
}
else if(month == 2){
if(month == 1){
row_num <- 1
}
if(month == 2){
row_num <- 5749
}
if(month == 3){
row_num <- 11012
}
if(month == 4){
row_num <- 17250
}
if(month == 5){
row_num <- 23547
}
if(month == 6){
row_num <- 31866
}
if(month == 7){
row_num <- 39470
}
if(month == 8){
row_num <- 49783
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015")
source('DataWranglingScript.r')
build_map <- function(slider_range){
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Initial.Type.Description)
)
}
}
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015")
source('DataWranglingScript.r')
build_map <- function(slider_range){
data <- data[monthly_row_nums(start):monthly_row_nums(end),]
leaflet(data) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions(),popup = ~as.character(Initial.Type.Description)
)
}
build_map()
start <- 3
end <- 5
build_map()
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
shiny::runApp('~/Desktop/498F/Building-Applications')
View(data)
shiny::runApp('~/Desktop/498F/Building-Applications')
setwd("/Users/colecansler/Desktop/498F/Seattle-911-Calls-2015/Scripts")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
start <- 1
end <- 4
shiny::runApp()
